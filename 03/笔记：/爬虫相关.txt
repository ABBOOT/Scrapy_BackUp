----------------------------------------tag----------------------------------------
爬虫与反爬虫斗争：
1、爬虫诞生，基于urlib，httpclient进行，
反爬虫察觉user-agent多为Python-urllin/2.7，则把对应的ip封杀

2、爬虫改变策略，user-agent模仿BaiduSpider，且每半小时换一次ip
反爬虫设置频率限制，且通过hostname检查ip是否是baidu家的爬虫，对这些ip设置百名单

3、爬虫放慢爬取速度，随机时间秒爬取，隔分休息，规定时间段爬取，隔天休息
反爬虫看到这些新的日志，换思路，当几小时总请求超过多少次的时候弹出验证码框，未正确准确输入的ip记录进黑名单

4、爬虫看到验证码，使用图像识别技术，把验证码图进行二值化，分词，模式训练之后，能够验证码反识别了
反爬虫则将数据不再直接渲染，由前端异步获取，且通过javaScript的加密生成动态的token，同时加密库再进行混淆，
这样，就有效反httpclient爬虫了

5、爬虫看到混淆的加密库，可以慢慢调试找到加密原理，但是比较费时费力，于是，
放弃基于HttpClient的爬虫，选择来内置浏览器引擎的爬虫（关键词：PhantomJS,Selenium）,
在浏览器引擎运行页面，直接获取来正确的结果，又一次拿到了对方的数据
反爬虫：i will say no more

----------------------------------------tag----------------------------------------
www.weibo.cn比较low的登录接口，哈哈没想到吧！！！

----------------------------------------tag----------------------------------------
JavaScraipt,html脚本语言
JQuery,如果你在一个网站上看到ta,那么采集网站数据时要格外小心，JQuery可以动态创建HTML内容，只有在JavaScript
执行之后才会显示，如果采用传统的方法采集页面内容，只能获得JavaScript执行之前页面上的内容
Ajax:Asynchronous JavaScipt and XML(异步JavaScript和XML)
DHTML,与Ajax一样

如何搞定那些使用Ajax技术的页面呢？、
1、费时费力地分析JavaScript代码来采集内容
2、用Python的库运行JavaScript,直接采集你在浏览器里看到的页面！